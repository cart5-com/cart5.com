---
interface Props {
	title: string;
}
const { title } = Astro.props;
const websiteId = Astro.locals.WEBSITE?.id;
const websiteName = Astro.locals.WEBSITE?.name;
const SENTRY_RELEASE_ID = globalThis?.SENTRY_RELEASE?.id;
---

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>

	<body>
		<ul>
			<li><a href="/">index.astro</a></li>
			<li><a href="/sample-error">sample-error.astro</a></li>
			<li>
				<a href="/hello/world?hello=world#helloworld=1">hello/world.astro</a>
			</li>
		</ul>
		<hr />
		<h4>{title}</h4>
		<hr />
		<button id="whoami-button">Who am I</button>
		<pre id="whoami-result"></pre>
		<hr />
		<button class="hidden" id="manage-account-button">Manage Account</button>
		<br />
		<button class="hidden" id="logout-button">Logout</button>
		<!-- <button class="hidden" id="logout-button">Logout</button> -->
		<button class="hidden" id="login-button">Login</button>
		<button class="hidden" id="register-button">Sign Up</button>
		<script src="../clientScripts/helper.ts"></script>
		<style>
			.hidden {
				display: none;
			}
			.cache-date {
				border: 1px solid blue;
				padding: 3px;
				border-radius: 3px;
			}
		</style>
		<hr />
		<div>
			ðŸ’©ðŸ’©ðŸ’©ðŸ’©cache:
			<span class="cache-date" data-cache-date={Date.now()}></span>
			<br />
			SENTRY_RELEASE_ID: {SENTRY_RELEASE_ID}
		</div>
		<hr />
		<div>
			websiteId:{websiteId}
			<br />
			websiteName:{websiteName}
		</div>
		<hr />
		<script>
			import { formatDate } from "@lib/utils/formatDate";
			const cacheDateSpanElement = document.querySelector<HTMLSpanElement>(".cache-date");
			if (cacheDateSpanElement) {
				cacheDateSpanElement.textContent = formatDate(Number(cacheDateSpanElement.dataset.cacheDate));
			}
			console.log("blue ðŸ’©ðŸ’©ðŸ’©ðŸ’© cacheDateSpanElement");
			console.log(cacheDateSpanElement);

			// setTimeout(() => {
			// 	document.body.style.backgroundColor = "red";
			// 	window.location.reload();
			// }, 2000);
		</script>

		<hr />
		<button id="error-button">Throw client test error</button>
		<script>
			function handleClick() {
				throw new Error("This is a test error");
			}
			document.querySelector<HTMLButtonElement>("#error-button")?.addEventListener("click", handleClick);
		</script>

		<hr />
		<!-- ACTIONS SAMPLE -->
		<input type="text" id="name-input" value="Houston111" />
		<button id="get-greeting-button">Get greeting</button>
		<button id="sampleEeerrr">sampleEeerrr</button>
		<script>
			import { actions } from "astro:actions";
			const nameInput = document.querySelector<HTMLInputElement>("#name-input");
			const button = document.querySelector<HTMLButtonElement>("#get-greeting-button");
			button?.addEventListener("click", async () => {
				// Show alert pop-up with greeting from action
				const { data, error } = await actions.getGreeting({ name: nameInput?.value ?? "" });
				if (error) {
					console.error(error);
				} else {
					console.log(data);
				}
			});

			const button2 = document.querySelector<HTMLButtonElement>("#sampleEeerrr");
			button2?.addEventListener("click", async () => {
				const { data, error } = await actions.sampleEeerrr({ name: nameInput?.value ?? "" });
				if (error) {
					console.error(error);
				} else {
					console.log(data);
				}
			});
		</script>
		<hr />
		<button id="test-post-button">Test POST</button>
		<button id="test-post-button-2">bad request Test POST 2</button>
		<input type="text" id="test-post-input" value="Houston-test-post" />
		<script>
			const button3 = document.querySelector<HTMLButtonElement>("#test-post-button");
			const input = document.querySelector<HTMLInputElement>("#test-post-input");
			button3?.addEventListener("click", async () => {
				const response = await fetch("/atro-api/test-post.json", {
					method: "POST",
					body: JSON.stringify({ name: input?.value ?? "" }),
					headers: {
						"Content-Type": "application/json"
					}
				});
				const data = await response.json();
				console.log(data);
			});
			const button4 = document.querySelector<HTMLButtonElement>("#test-post-button-2");
			button4?.addEventListener("click", async () => {
				const response = await fetch("/atro-api/test-post.json", {
					method: "POST"
				});
				const data = await response.json();
				console.log(data);
			});
		</script>
	</body>
</html>
