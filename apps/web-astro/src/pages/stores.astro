---
import BaseLayout from "../layout/BaseLayout.astro";
import { getNearbyStores_Service } from "@db/services/distance.service";
import FilterControls from "../components/stores-page/FilterControls.astro";
import StoreList from "../components/stores-page/StoreList.astro";
import Pagination from "../components/stores-page/Pagination.astro";
import { BASE_LINKS } from "@web-astro/utils/links";
import { slugify } from "@lib/utils/slugify";
import MultipleCartsBtn from "@web-astro/components/store-page/cart/MultipleCartsBtn.vue";
import MultipleCartsView from "@web-astro/components/store-page/cart/MultipleCartsView.vue";
import type { OrderType } from "@lib/types/orderType";

type params = Parameters<typeof getNearbyStores_Service>;
const lat = Number(Astro.url.searchParams.get("lat"));
const lng = Number(Astro.url.searchParams.get("lng"));
const address = Astro.url.searchParams.get("address") || "address";
// const country = Astro.url.searchParams.get("country");
const measure = (Astro.url.searchParams.get("measure") ?? "km") as params[3];
const orderType = (Astro.url.searchParams.get("order-type") ?? "delivery") as params[7];
const sort = (Astro.url.searchParams.get("sort") ?? "distance_asc") as params[8];
const limit = Number(Astro.url.searchParams.get("limit") ?? 36);
const currentPage = Number(Astro.url.searchParams.get("page") ?? 1);
const range = Number(Astro.url.searchParams.get("range") ?? 20); // 20 km
// const listAllParams = Object.fromEntries(Astro.url.searchParams.entries());

const nearbyStores = await getNearbyStores_Service(
	lat,
	lng,
	Astro.locals.WEBSITE?.isMarketplace ? null : Astro.locals.WEBSITE?.id,
	measure,
	limit,
	currentPage,
	range,
	orderType,
	sort
);

if (nearbyStores.stores.length === 1) {
	const storeLink = BASE_LINKS.STORE(nearbyStores.stores[0]?.id ?? "", slugify(nearbyStores.stores[0]?.name ?? ""));
	Astro.redirect(storeLink);
}

const createPageUrl = (
	pageNum: number,
	orderType: OrderType | undefined = undefined,
	sort: string | undefined = undefined,
	range: number | undefined = undefined
) => {
	const url = new URL(Astro.url);
	url.searchParams.set("page", pageNum.toString());
	if (orderType) url.searchParams.set("order-type", orderType);
	if (sort) url.searchParams.set("sort", sort);
	if (range) url.searchParams.set("range", range.toString());
	return url.toString();
};
---

<BaseLayout title={Astro.locals.WEBSITE?.name ?? "List"}>
	<FilterControls orderType={orderType} address={address} sort={sort} createPageUrl={createPageUrl} />

	<StoreList stores={nearbyStores.stores} measure={measure} orderType={orderType} />

	<Pagination
		currentPage={currentPage}
		totalPages={nearbyStores.pagination.totalPages}
		createPageUrl={(page: number) => createPageUrl(page)}
	/>
	<MultipleCartsBtn client:only="vue" slot="header-right" />
	<MultipleCartsView client:only="vue" slot="right-drawer" />
</BaseLayout>
